{"version":3,"sources":["components/shared/button/index.js","components/currentWorkoutModal/index.js","redux/action-creators/workouts/index.js","redux/types/index.js","components/previousWorkouts/index.js","redux/action-creators/exercises/index.js","components/graph/index.js","components/workout/index.js","redux/action-creators/modal/index.js","components/search/index.js","components/main/index.js","redux/reducers/currentWorkoutModal/index.js","redux/reducers/exerciseData/index.js","redux/reducers/exerciseModal/index.js","redux/reducers/workouts/index.js","redux/reducers/index.js","index.js","assets/redcross.png"],"names":["StyledButton","styled","button","_templateObject","Button","_ref","type","text","onClick","className","react_default","a","createElement","customStyles","content","top","left","right","bottom","marginRight","transform","padding","width","height","connect","_ref2","currentWorkout","workouts","isOpen","toggleShowCurrentWorkoutModal","lib_default","style","map","exercise","name","sets","reps","weight","submitWorkout","workout","date","dispatch","saveStateToServer","updateExerciseOnServer","axios","method","url","data","Date","now","workoutExercises","fetchPreviousWorkouts","then","loadPreviousWorkoutsToStore","toggleShowingWorkout","Container","div","previousWorkouts_templateObject","PreviousWorkoutContainer","_templateObject2","Table","table","_templateObject3","TableHeading","th","_templateObject4","TableData","td","_templateObject5","WorkoutDate","span","_templateObject6","Main","state","workoutsToShow","this","props","setState","_this2","workoutsOrderedbyData","previousWorkouts","sort","b","showMoreWorkouts","slice","moment","format","isShowing","Component","bindActionCreators","searchForExercise","foundExercise","filter","ex","toLowerCase","value","setCurrentExercise","resetExerciseSearch","addExerciseToCurrentWorkout","GraphContainer","graph_templateObject","Graph","data123","timestamp2","getTime","currentExercise","previousWeights","forEach","d","timestamp","push","x","y","react_vis_es","xDomain","yDomain","xType","stroke","strokeWidth","fill","React","workout_templateObject","RedCrossContainer","workout_templateObject2","TopSection","workout_templateObject3","RedCross","img","workout_templateObject4","workout_templateObject5","StyledField","Field","workout_templateObject6","StyledSelect","Select","_templateObject7","StyledSelect2","_templateObject8","InputContainer","_templateObject9","FormRow","_templateObject10","Workout","_this","workout_Container","formik_esm","initialValues","onSubmit","values","resetForm","render","setFieldValue","arrayHelpers","workout_StyledButton","index","key","concat","options","exercises","onChange","placeholder","remove","src","redcross","button_Button","toggleModal","_ref3","languages","search_templateObject","SearchContainer","search_templateObject2","SearchResult","search_templateObject3","NoSearchResult","search_templateObject4","Search","searchTerm","renderSearchResult","exerciseData","current","lastWeightLifted","graph","search_Container","handleChange","searched","main_templateObject","Section","main_templateObject2","main_templateObject3","StyledOuterForm","Form","main_templateObject4","StyledInnerForm","main_templateObject5","RepsAndSetsSection","main_templateObject6","WeightSection","main_templateObject7","ButtonSection","main_templateObject8","main_templateObject9","showCurrentWorkoutModal","get","label","_this3","main_Container","currentWorkoutModal","exerciseModal","contentLabel","exerciseName","mergeValues","Object","objectSpread","main_StyledField","main_StyledButton","search","initialState","getLatestWeightLifted","rootReducer","combineReducers","arguments","length","undefined","action","id","GlobalStyle","createGlobalStyle","src_templateObject","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middlewares","thunk","store","createStore","reducer","applyMiddleware","apply","App","es","main","ReactDOM","src_App","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.b3ba92e2.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledButton = styled.button`\n  width: 100%;\n  padding: 10px;\n  background: #3d9e7b;\n  border-radius: 4px;\n`\n\nexport const Button = ({ type, text, onClick, className }) => (\n  <StyledButton type={type} className={className} onClick={onClick}>\n    {text}\n  </StyledButton>\n)\n","import Modal from 'react-modal'\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    padding: '10px',\n    width: '300px',\n    height: '300px',\n  },\n}\n\nexport const CurrentWorkoutModal = ({ currentWorkout, isOpen, toggleShowCurrentWorkoutModal }) => (\n  <Modal isOpen={isOpen} style={customStyles}>\n    <table>\n      <tr>\n        <th>Exercise name</th>\n        <th>Sets</th>\n        <th>Reps</th>\n        <th>Weight</th>\n      </tr>\n      {currentWorkout.map(exercise => (\n        <tr>\n          <td>{exercise.name}</td>\n          <td>{exercise.sets}</td>\n          <td>{exercise.reps}</td>\n          <td>{exercise.weight}kg</td>\n        </tr>\n      ))}\n    </table>\n    <button onClick={() => toggleShowCurrentWorkoutModal()}>Close</button>\n  </Modal>\n)\n\nconst mapStateToProps = ({ workouts: { currentWorkout } }) => ({\n  currentWorkout,\n})\n\nexport default connect(mapStateToProps)(CurrentWorkoutModal)\n","import {\n  SAVE_WORKOUT,\n  SUBMIT_WORKOUT,\n  TOGGLE_SHOWING_WORKOUT,\n} from 'redux/types'\n\nimport axios from 'axios'\n\nexport const submitWorkout = (workout, date) => {\n  return dispatch => {\n    dispatch({ type: SUBMIT_WORKOUT, workout, date })\n    dispatch(saveStateToServer(workout))\n    dispatch(updateExerciseOnServer(workout))\n  }\n}\n\nexport const updateExerciseOnServer = workout => {\n  return () => {\n    axios({\n      method: 'post',\n      url: '/exercises',\n      data: {\n        date: Date.now(),\n        workoutExercises: workout,\n      },\n    })\n  }\n}\n\nexport const saveStateToServer = workout => {\n  return () => {\n    axios({\n      method: 'post',\n      url: '/workouts',\n      data: {\n        date: Date.now(),\n        workoutExercises: workout,\n      },\n    })\n  }\n}\n\nexport const fetchPreviousWorkouts = () => {\n  return dispatch => {\n    axios({\n      method: 'get',\n      url: '/workouts',\n    }).then(data => {\n      dispatch(loadPreviousWorkoutsToStore(data.data))\n    })\n  }\n}\n\nconst loadPreviousWorkoutsToStore = workouts => {\n  return dispatch => {\n    dispatch({ type: SAVE_WORKOUT, workouts })\n  }\n}\n\nexport const toggleShowingWorkout = workout => {\n  return {\n    type: TOGGLE_SHOWING_WORKOUT,\n    workout,\n  }\n}\n","export const SET_CURRENT_EXERCISE = 'SET_CURRENT_EXERCISE'\nexport const SUBMIT_WORKOUT = 'SUBMIT_WORKOUT'\nexport const SAVE_WORKOUT = 'SAVE_WORKOUT'\nexport const TOGGLE_SHOWING_WORKOUT = 'TOGGLE_SHOWING_WORKOUT'\n","import React, { Component } from 'react'\nimport {\n  fetchPreviousWorkouts,\n  toggleShowingWorkout,\n} from 'redux/action-creators/workouts'\n\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport moment from 'moment'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  box-shadow: rgba(0, 0, 0, 0.3) 0px 2px 4px 0px;\n  background: #000;\n  padding: 3px;\n  margin-bottom: 10px;\n`\n\nconst PreviousWorkoutContainer = styled.div`\n  padding: 10px;\n  margin-bottom: 1rem;\n  background: #fff;\n`\n\nconst Table = styled.table`\n  > tr:nth-child(even){border-bottom: 1px solid black;}\n  border-collapse: collapse;\n  border-spacing: 0;\n`\n\nconst TableHeading = styled.th`\n  text-align: left;\n  padding: 10px 10px 10px 0;\n`\n\nconst TableData = styled.td`\n  padding: 10px 10px 10px 0;\n`\n\nconst WorkoutDate = styled.span`\n  font-size: 15px;\n`\n\nclass Main extends Component {\n\n  state = {\n    workoutsToShow: 3\n  }\n\n  componentDidMount() {\n    this.props.fetchPreviousWorkouts()\n  }\n\n  showMoreWorkouts() {\n    this.setState({workoutsToShow: this.state.workoutsToShow += 1})\n  }\n\n  render() {\n    const workoutsOrderedbyData = this.props.workouts.previousWorkouts.sort((a, b) => b.date - a.date)\n    return (\n      <Container>\n        <h4> Previous workouts </h4>\n        <button onClick={() => this.showMoreWorkouts()}>show more</button>\n        {workoutsOrderedbyData.slice(0, this.state.workoutsToShow).map(workout => {\n          const date = moment(workout.date).format('DD-MM-YYYY')\n          return (\n            <div onClick={() => this.props.toggleShowingWorkout(workout)}>\n              {workout.isShowing ? (\n                <PreviousWorkoutContainer>\n                  <h3>Workout Summary</h3>\n                  {date}\n                  {'time started'}\n                  {'time ended'}\n                  <Table>\n                    <tr>\n                      <TableHeading>Exercise name</TableHeading>\n                      <TableHeading>Sets</TableHeading>\n                      <TableHeading>Reps</TableHeading>\n                      <TableHeading>Weight</TableHeading>\n                    </tr>\n                    {workout.workoutExercises.workouts.map(exercise => (\n                      <tr>\n                        <TableData>{exercise.name}</TableData>\n                        <TableData>{exercise.sets}</TableData>\n                        <TableData>{exercise.reps}</TableData>\n                        <TableData>{exercise.weight}kg</TableData>\n                      </tr>\n                    ))}\n                  </Table>\n                </PreviousWorkoutContainer>\n              ) : (\n                <PreviousWorkoutContainer>\n                  <WorkoutDate> {date} Click to view workout </WorkoutDate>\n                </PreviousWorkoutContainer>\n              )}\n            </div>\n          )\n        })}\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = ({ workouts }) => ({\n  workouts,\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({ fetchPreviousWorkouts, toggleShowingWorkout }, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Main)\n","import { SET_CURRENT_EXERCISE } from 'redux/types'\nimport axios from 'axios'\n\nexport const searchForExercise = exercise => {\n  return dispatch => {\n    axios({\n      method: 'get',\n      url: '/exercises',\n    }).then(data => {\n      const foundExercise = data.data.filter(\n        ex => ex.name.toLowerCase() === exercise.value.toLowerCase()\n      )\n      dispatch(setCurrentExercise(foundExercise[0]))\n    })\n  }\n}\n\nconst setCurrentExercise = exercise => {\n  return {\n    type: SET_CURRENT_EXERCISE,\n    exercise,\n  }\n}\n\nexport const resetExerciseSearch = () => {\n  return {\n    type: 'RESET_EXERCISE_SEARCH',\n  }\n}\n\nexport const addExerciseToCurrentWorkout = exercise => {\n  return dispatch => {\n    dispatch({ type: 'ADD_EXERCISE_TO_CURRENT_WORKOUT', exercise })\n    dispatch({ type: 'TOGGLE_MODAL' })\n  }\n}\n","import {\n  HorizontalGridLines,\n  LineSeries,\n  VerticalGridLines,\n  XAxis,\n  XYPlot,\n  YAxis,\n} from 'react-vis'\n\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst GraphContainer = styled.div``\n\nclass Graph extends React.Component {\n  render() {\n    let data123 = []\n    let timestamp2 = new Date(1548102612420).getTime()\n    const ONE_DAY = 86400000\n\n    if (this.props.currentExercise.previousWeights) {\n      const data = this.props.currentExercise.previousWeights\n      data.forEach(d => {\n        const timestamp = new Date(d.date).getTime()\n        data123.push({ x: timestamp, y: d.weight })\n      })\n    }\n\n    return this.props.currentExercise ? (\n      <GraphContainer>\n        <XYPlot\n          xDomain={[timestamp2, timestamp2 + 100 * ONE_DAY]}\n          yDomain={[0, 100]}\n          xType=\"time\"\n          width={350}\n          height={250}\n        >\n          <VerticalGridLines />\n          <HorizontalGridLines />\n          <XAxis />\n          <YAxis />\n          <LineSeries\n            data={data123}\n            style={{ stroke: 'red', strokeWidth: 3, fill: 'none' }}\n          />\n        </XYPlot>\n      </GraphContainer>\n    ) : null\n  }\n}\n\nexport default Graph\n","import { Field, FieldArray, Form, Formik } from 'formik'\n\nimport { Button } from 'components/shared/button'\nimport React from 'react'\nimport Select from 'react-select'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport redcross from 'assets/redcross.png'\nimport styled from 'styled-components'\nimport { submitWorkout } from 'redux/action-creators/workouts'\n\nconst Container = styled.div`\n  box-shadow: rgba(0, 0, 0, 0.3) 0px 2px 4px 0px;\n  background: #e7e7e7;\n  padding: 3px;\n  margin-bottom: 10px;\n`\n\nconst RedCrossContainer = styled.div`\n  object-fit: contain;\n  width: 15px;\n  height: 15px;\n`\n\nconst TopSection = styled.div`\n  display: flex;\n  justify-content: space-between;\n`\n\nconst RedCross = styled.img`\n  width: 100%;\n  height: 100%;\n`\n\nconst StyledButton = styled(Button)`\n  height: 34px;\n`\n\nconst StyledField = styled(Field)`\n  width: 34px;\n  height: 34px;\n  font-size: 10px;\n  text-align: center;\n  padding: 0;\n`\n\nexport const StyledSelect = styled(Select)`\n  width: 100%;\n  margin-bottom: 5px;\n`\n\nexport const StyledSelect2 = styled(Select)`\n  width: 150px;\n  font-size: 10px;\n`\n\nconst InputContainer = styled.span`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n`\n\nconst FormRow = styled.div`\n  margin-left: -8px;\n  margin-right: -8px;\n  margin-bottom: 5px;\n`\n\nclass Workout extends React.Component {\n  render() {\n    const date = Date.now()\n    return (\n      <Container>\n        <Formik\n          initialValues={{\n            workouts: [{ name: '', reps: '', sets: '', weight: '' }],\n          }}\n          onSubmit={(values, { resetForm }) => (\n            this.props.submitWorkout(values, date), resetForm()\n          )}\n          render={({ values, setFieldValue }) => (\n            <Form>\n              <FieldArray\n                name=\"workouts\"\n                render={arrayHelpers => (\n                  <div>\n                    <TopSection>\n                      <h4> New Workout </h4>\n                      <div>\n                        <StyledButton\n                          text=\"add exercise\"\n                          type=\"button\"\n                          onClick={() =>\n                            arrayHelpers.push({\n                              name: '',\n                              reps: 0,\n                              sets: 0,\n                              weight: 0,\n                            })\n                          }\n                        />\n                      </div>\n                    </TopSection>\n                    {values.workouts.map((workout, index) => (\n                      <FormRow key={index}>\n                        <InputContainer>\n                          <StyledSelect2\n                            name={`workouts[${index}].options`}\n                            options={this.props.exercises}\n                            onChange={value =>\n                              setFieldValue(\n                                `workouts[${index}].name`,\n                                value.value\n                              )\n                            }\n                          />\n                          <StyledField\n                            placeholder=\"reps\"\n                            name={`workouts[${index}].reps`}\n                          />\n                          <StyledField\n                            placeholder=\"sets\"\n                            name={`workouts[${index}].sets`}\n                          />\n                          <StyledField\n                            placeholder=\"weight\"\n                            name={`workouts[${index}].weight`}\n                          />\n                          <RedCrossContainer\n                            type=\"button\"\n                            text=\"-\"\n                            onClick={() => arrayHelpers.remove(index)}\n                          >\n                            <RedCross src={redcross} />\n                          </RedCrossContainer>\n                        </InputContainer>\n                      </FormRow>\n                    ))}\n\n                    <Button type=\"submit\" text=\"Submit Workout\" />\n                  </div>\n                )}\n              />\n            </Form>\n          )}\n        />\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = ({ workouts, languages }) => ({\n  workouts,\n  languages,\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({ submitWorkout }, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Workout)\n","export const toggleModal = () => {\n    return {\n        type: 'TOGGLE_MODAL'\n    }\n}","import {\n  resetExerciseSearch,\n  searchForExercise,\n} from 'redux/action-creators/exercises'\n\nimport { Button } from 'components/shared/button'\nimport Graph from 'components/graph'\nimport React from 'react'\nimport { StyledSelect } from 'components/workout'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { toggleModal } from 'redux/action-creators/modal'\n\nconst Container = styled.div`\n  box-shadow: rgba(0, 0, 0, 0.3) 0px 2px 4px 0px;\n  background: #000;\n  padding: 3px;\n  margin-bottom: 10px;\n`\n\nconst SearchContainer = styled.div`\n  width: 100%;\n`\n\nconst SearchResult = styled.div`\n  font-size: 18px;\n`\n\nconst NoSearchResult = styled.div`\n  padding: 10px;\n`\n\nclass Search extends React.Component {\n  state = {\n    searchTerm: '',\n  }\n\n  handleChange(value) {\n    this.setState({ searchTerm: value })\n  }\n\n  render() {\n    let renderSearchResult\n    if (this.props.exerciseData.current.previousWeights) {\n      renderSearchResult = (\n        <SearchResult>\n          <div> Exercise {this.props.exerciseData.current.name} </div>\n          <div>\n            Last weight lifted{' '}\n            {this.props.exerciseData.current.lastWeightLifted}kg\n            <Graph currentExercise={this.props.exerciseData.current} />\n          </div>\n        </SearchResult>\n      )\n    } else {\n      renderSearchResult = (\n        <NoSearchResult>\n          You have no previous records for this weight\n        </NoSearchResult>\n      )\n    }\n\n    return (\n      <Container>\n        <SearchContainer>\n          <StyledSelect\n            options={this.props.exercises}\n            placeholder=\"search for an exercise\"\n            onChange={value => this.handleChange(value)}\n          />\n        </SearchContainer>\n        <Button\n          text=\"search...\"\n          onClick={() => this.props.searchForExercise(this.state.searchTerm)}\n        />\n        {this.props.exerciseData.searched ? (\n          <div>\n            {renderSearchResult}\n            <button onClick={() => this.props.resetExerciseSearch()}>Clear</button>\n            <button onClick={() => this.props.toggleModal()}>Add to workout</button>\n          </div>\n        ) : null}\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = ({ exerciseData }) => ({\n  exerciseData,\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({ searchForExercise, resetExerciseSearch, toggleModal }, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Search)\n","import { Field, FieldArray, Form, Formik } from 'formik'\nimport React, { Component } from 'react'\n\nimport { Button } from 'components/shared/button'\nimport CurrentWorkoutModal from 'components/currentWorkoutModal'\nimport Modal from 'react-modal'\nimport PreviousWorkouts from 'components/previousWorkouts'\nimport Search from 'components/search'\nimport { addExerciseToCurrentWorkout } from 'redux/action-creators/exercises'\nimport axios from 'axios'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { toggleModal } from 'redux/action-creators/modal'\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    padding: '10px',\n    width: '300px',\n    height: '300px',\n  },\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst Section = styled.div`\n  width: 100%;\n`\n\nconst StyledField = styled(Field)`\n  width: 34px;\n  height: 34px;\n  font-size: 20px;\n  text-align: center;\n  padding: 15px;\n  margin: 5px;\n`\n\nconst StyledOuterForm = styled(Form)`\n  height: 100%;\n`\n\nconst StyledInnerForm = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  height: 100%;\n`\n\nconst RepsAndSetsSection = styled.div`\n  display: flex;\n  flex-direction: row;\n  > span {\n    padding-top: 25px;\n  }\n`\n\nconst WeightSection = styled.div`\n  display: flex;\n  justify-content: center;\n`\n\nconst ButtonSection = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n`\n\nconst StyledButton = styled(Button)`\n  padding: 5px;\n  width: 40%;\n`\n\nclass Main extends Component {\n  state = {\n    exercises: [],\n    showCurrentWorkoutModal: false,\n  }\n\n  componentDidMount() {\n    axios.get('http://34.239.110.214:5000/exercises').then(data => {\n      data.data.map(exercise => {\n        this.setState({\n          exercises: this.state.exercises.concat({\n            value: exercise.name,\n            label: exercise.name,\n          }),\n        })\n      })\n    })\n  }\n\n  toggleShowCurrentWorkoutModal = () => {\n    this.setState({\n      showCurrentWorkoutModal: !this.state.showCurrentWorkoutModal,\n    })\n  }\n\n  render() {\n    return (\n      <Container>\n        <div>\n          <button onClick={() => this.toggleShowCurrentWorkoutModal()}>\n            view current workout\n          </button>\n          {this.state.showCurrentWorkoutModal ? (\n            <CurrentWorkoutModal\n              toggleShowCurrentWorkoutModal={this.toggleShowCurrentWorkoutModal}\n              isOpen={this.state.showCurrentWorkoutModal}\n            />\n          ) : null}\n        </div>\n\n        <Modal\n          isOpen={this.props.exerciseModal.isOpen}\n          style={customStyles}\n          contentLabel=\"Example Modal\"\n        >\n          <Formik\n            initialValues={{}}\n            onSubmit={values => {\n              const exerciseName = this.props.exerciseData.current.name\n              const mergeValues = { exerciseName, ...values }\n              this.props.addExerciseToCurrentWorkout(mergeValues)\n            }}\n            render={() => (\n              <StyledOuterForm>\n                <FieldArray\n                  name=\"workouts\"\n                  render={() => (\n                    <StyledInnerForm>\n                      <field name={`name`}>\n                        <h2>\n                          {this.props.exerciseData.current.name || 'Error'}\n                        </h2>\n                      </field>\n                      <RepsAndSetsSection>\n                        <StyledField name={`sets`} />\n                        <span>X</span>\n                        <StyledField name={`reps`} />\n                      </RepsAndSetsSection>\n                      <WeightSection>\n                        <StyledField name={`weight`} />\n                      </WeightSection>\n                      <ButtonSection>\n                        <StyledButton\n                          onClick={() => this.props.toggleModal()}\n                          type=\"submit\"\n                          text=\"Cancel\"\n                        />\n                        <StyledButton type=\"submit\" text=\"Add exercise\" />\n                      </ButtonSection>\n                    </StyledInnerForm>\n                  )}\n                />\n              </StyledOuterForm>\n            )}\n          />\n        </Modal>\n        <Search exercises={this.state.exercises} />\n        <Section>\n          <PreviousWorkouts />\n        </Section>\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = ({ exerciseData, exerciseModal }) => ({\n  exerciseData,\n  exerciseModal,\n})\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({ addExerciseToCurrentWorkout, toggleModal }, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Main)\n","const initialState = {\n    isOpen: false,\n  }\n  \n  export default (state = initialState, action) => {\n    switch (action.type) {\n      case 'TOGGLE_MODAL':\n        return {\n          ...state,\n          isOpen: !state.isOpen,\n        }\n      default:\n        return state\n    }\n  }\n  ","import { SET_CURRENT_EXERCISE } from '../../types'\n\nconst initialState = {\n  current: '',\n  searched: false,\n}\n\nconst getLatestWeightLifted = exercise => {\n  if (exercise.previousWeights) {\n    const exerciseFound = exercise.previousWeights.sort((a, b) => {\n      return b.date - a.date\n    })\n    return exerciseFound[0].weight\n  }\n  return\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_CURRENT_EXERCISE:\n      return {\n        ...state,\n        current: {\n          ...action.exercise,\n          lastWeightLifted: getLatestWeightLifted(action.exercise),\n        },\n        searched: true,\n      }\n    case 'RESET_EXERCISE_SEARCH':\n      return {\n        ...state,\n        current: '',\n        searched: false,\n      }\n    default:\n      return state\n  }\n}\n","const initialState = {\n  isOpen: false,\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case 'TOGGLE_MODAL':\n      return {\n        ...state,\n        isOpen: !state.isOpen,\n      }\n    default:\n      return state\n  }\n}\n","import {\n  SAVE_WORKOUT,\n  SUBMIT_WORKOUT,\n  TOGGLE_SHOWING_WORKOUT,\n} from 'redux/types'\n\nconst initialState = {\n  previousWorkouts: [],\n  currentWorkout: [],\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SUBMIT_WORKOUT:\n      return {\n        ...state,\n        previousWorkouts: state.previousWorkouts.concat({\n          workoutExercises: action.workout,\n          date: action.date,\n        }),\n      }\n    case SAVE_WORKOUT:\n      return {\n        ...state,\n        previousWorkouts: state.previousWorkouts\n          .concat(state.previousWorkouts)\n          .concat(action.workouts),\n      }\n    case TOGGLE_SHOWING_WORKOUT:\n      return {\n        ...state,\n        previousWorkouts: state.previousWorkouts.map(workout =>\n          workout.id === action.workout.id\n            ? { ...workout, isShowing: !workout.isShowing }\n            : workout\n        ),\n      }\n    case 'ADD_EXERCISE_TO_CURRENT_WORKOUT':\n      return {\n        ...state,\n        currentWorkout: state.currentWorkout.concat(action.exercise)\n      }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport currentWorkoutModal from './currentWorkoutModal'\nimport exerciseData from './exerciseData'\nimport exerciseModal from './exerciseModal'\nimport workouts from './workouts'\n\nconst rootReducer = combineReducers({\n  currentWorkoutModal,\n  exerciseData,\n  exerciseModal,\n  workouts,\n})\n\nexport default rootReducer\n","import { applyMiddleware, compose, createStore } from 'redux'\n\nimport Main from 'components/main'\nimport { Provider } from 'react-redux'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createGlobalStyle } from 'styled-components'\nimport reducer from 'redux/reducers'\nimport thunk from 'redux-thunk'\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    font-family: trebuchet;\n    background-color: #000;\n    color: #a1a1a1;\n  }\n`\n\nlet composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst middlewares = [thunk]\n\nconst store = createStore(\n  reducer,\n  composeEnhancers(applyMiddleware(...middlewares))\n)\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <GlobalStyle />\n        <Main />\n      </Provider>\n    )\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'))","module.exports = __webpack_public_path__ + \"static/media/redcross.b53ece99.png\";"],"sourceRoot":""}